filetype off                   " required by Vundle

" Vundle setup {{
  let vundle_readme=expand("~/.vim/bundle/vundle/README.md")
  if !filereadable(vundle_readme)
    "if !isdirectory("~/.vim/bundle/vundle")
    echo "Installing Vundle.."
    echo ""
    silent !mkdir -p ~/.vim/bundle
    silent !git clone https://github.com/gmarik/vundle ~/.vim/bundle/vundle
  endif

  set rtp+=~/.vim/bundle/vundle
  call vundle#begin()
" }}

" Plugins {{
  Plugin 'gmarik/vundle'

  let mapleader = ","

  " color schemes
  Plugin 'w0ng/vim-hybrid'
  Plugin 'chriskempson/base16-vim'
  Plugin 'altercation/vim-colors-solarized'

  " editorconfig
  Plugin 'editorconfig/editorconfig-vim'
  let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']

  " misc tpope plugins
  Plugin 'tpope/vim-commentary' " comment stuff out (e.g. gcc)
  " Plugin 'tpope/vim-endwise'
  Plugin 'tpope/vim-repeat' " better repeat after mapping
  Plugin 'tpope/vim-surround'

  " search with ag/ack
  if executable('ag')
    Plugin 'rking/ag.vim'
  elseif executable('ack-grep') || executable('ack')
    Plugin 'mileszs/ack.vim'
  endif

  " git support
  if executable('git')
    Plugin 'tpope/vim-fugitive'
    Plugin 'airblade/vim-gitgutter' " see git diff in gutter
  endif

  " ctag support
  Plugin 'ludovicchabant/vim-gutentags'
  let g:gutentags_cache_dir = '~/.tags_cache'

  " file overview
  Plugin 'majutsushi/tagbar'
  let g:tagbar_type_elixir = {
      \ 'ctagstype' : 'elixir',
      \ 'kinds' : [
          \ 'f:functions',
          \ 'functions:functions',
          \ 'c:callbacks',
          \ 'd:delegates',
          \ 'e:exceptions',
          \ 'i:implementations',
          \ 'a:macros',
          \ 'o:operators',
          \ 'm:modules',
          \ 'p:protocols',
          \ 'r:records'
      \ ]
  \ }
  let g:tagbar_type_markdown = {
    \ 'ctagstype' : 'markdown',
    \ 'kinds' : [
        \ 'h:Heading_L1',
        \ 'i:Heading_L2',
        \ 'k:Heading_L3'
    \ ]
  \ }

  " auto completion
  if has('python')
    Plugin 'Valloric/YouCompleteMe' " install with './install.py --tern-completer'
    let g:ycm_autoclose_preview_window_after_completion=1
    let g:ycm_autoclose_preview_window_after_insertion=1
    let g:ycm_collect_identifiers_from_tags_files=1
  endif

  " auto-completion for quotes, parens, brackets
  Plugin 'Raimondi/delimitMate'

  " create your own text objects (dependency for ruby blocks)
  Plugin 'kana/vim-textobj-user'

  " fuzzy finder
  Plugin 'kien/ctrlp.vim'
  let g:ctrlp_working_path_mode = '' " don't be smart about working dir
  if executable('ag')
    let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""' " use ag for lightning fast search
    let g:ctrlp_use_caching = 0 " no need for caching because ag is fast enough
  else
    let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$|node_modules$|bower_components$|bundle$|cache$|tmp$|temp$|_build$'
  endif

  " auto change workdir
  Plugin 'airblade/vim-rooter'

  " better file explorer
  Plugin 'scrooloose/nerdtree'

  " better status line
  Plugin 'bling/vim-airline'

  " syntax check
  Plugin 'scrooloose/syntastic'
  let g:syntastic_check_on_open = 1
  let g:syntastic_javascript_checkers = ['eslint']
  let g:syntastic_javascript_eslint_exec = 'eslint_d'

  set statusline+=%#warningmsg#
  set statusline+=%{SyntasticStatuslineFlag()}
  set statusline+=%*

  let g:syntastic_always_populate_loc_list = 1
  let g:syntastic_loc_list_height = 5
  let g:syntastic_auto_loc_list = 0
  let g:syntastic_check_on_open = 1
  let g:syntastic_check_on_wq = 1

  "let g:syntastic_error_symbol = '‚ùå'
  "let g:syntastic_style_error_symbol = '‚ÅâÔ∏è'
  "let g:syntastic_warning_symbol = '‚ö†Ô∏è'
  "let g:syntastic_style_warning_symbol = 'üí©'

  highlight link SyntasticErrorSign SignColumn
  highlight link SyntasticWarningSign SignColumn
  highlight link SyntasticStyleErrorSign SignColumn
  highlight link SyntasticStyleWarningSign SignColumn

  " tmux
  Plugin 'tmux-plugins/vim-tmux' " syntax hightlighting
  Plugin 'tmux-plugins/vim-tmux-focus-events' " better focus in tmux

  " Dash.app support for Mac
  Plugin 'rizzatti/dash.vim'

  " multi language support
  Plugin 'sheerun/vim-polyglot'

  " ployglot: handlebars config
  let g:mustache_abbreviations = 1 " enable abbeviations
  " ployglot: React JSX config
  let g:jsx_ext_required = 0 " default 1
  let g:jsx_pragma_required = 0 " default 0

  " fast html editing
  Plugin 'mattn/emmet-vim'

  " css colors
  Plugin 'ap/vim-css-color'

  " phoenix support
  Plugin 'c-brenn/phoenix.vim'
  Plugin 'tpope/vim-projectionist' " required for some navigation features

  " ruby/rails support
  Plugin 'nelstrom/vim-textobj-rubyblock'
  runtime macros/matchit.vim
  Plugin 'tpope/vim-rails'

  " sublime text like multiple cursors
  "	Plugin 'terryma/vim-multiple-cursors'
" }}

call vundle#end()
filetype plugin indent on     " required by Vundle

" vim: set ft=vim :
